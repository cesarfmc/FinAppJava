package model;
// Generated 18/10/2019 10:39:39 by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Transacao generated by hbm2java
 */
@Entity
@Table(name = "Transacao", schema = "dbo", catalog = "FIN")
public class Transacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idTransacao;
	private Conta conta;
	private Date data;
	private String numeroDoc;
	private String historico;
	private BigDecimal debito;
	private BigDecimal credito;
	private BigDecimal saldo;
	private String tipo;
	private Date dataInsercao;
	private boolean status;
	private Set<ContaReceber> contaRecebers = new HashSet<ContaReceber>(0);
	private Set<ContaPagar> contaPagars = new HashSet<ContaPagar>(0);

	public Transacao() {
	}

	public Transacao(Conta conta, Date data, BigDecimal saldo, String tipo, Date dataInsercao, boolean status) {
		this.conta = conta;
		this.data = data;
		this.saldo = saldo;
		this.tipo = tipo;
		this.dataInsercao = dataInsercao;
		this.status = status;
	}

	public Transacao(Conta conta, Date data, String numeroDoc, String historico, BigDecimal debito, BigDecimal credito,
			BigDecimal saldo, String tipo, Date dataInsercao, boolean status, Set<ContaReceber> contaRecebers,
			Set<ContaPagar> contaPagars) {
		this.conta = conta;
		this.data = data;
		this.numeroDoc = numeroDoc;
		this.historico = historico;
		this.debito = debito;
		this.credito = credito;
		this.saldo = saldo;
		this.tipo = tipo;
		this.dataInsercao = dataInsercao;
		this.status = status;
		this.contaRecebers = contaRecebers;
		this.contaPagars = contaPagars;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idTransacao", unique = true, nullable = false)
	public Integer getIdTransacao() {
		return this.idTransacao;
	}

	public void setIdTransacao(Integer idTransacao) {
		this.idTransacao = idTransacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idConta", nullable = false)
	public Conta getConta() {
		return this.conta;
	}

	public void setConta(Conta conta) {
		this.conta = conta;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data", nullable = false, length = 10)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Column(name = "numeroDoc")
	public String getNumeroDoc() {
		return this.numeroDoc;
	}

	public void setNumeroDoc(String numeroDoc) {
		this.numeroDoc = numeroDoc;
	}

	@Column(name = "historico")
	public String getHistorico() {
		return this.historico;
	}

	public void setHistorico(String historico) {
		this.historico = historico;
	}

	@Column(name = "debito")
	public BigDecimal getDebito() {
		return this.debito;
	}

	public void setDebito(BigDecimal debito) {
		this.debito = debito;
	}

	@Column(name = "credito")
	public BigDecimal getCredito() {
		return this.credito;
	}

	public void setCredito(BigDecimal credito) {
		this.credito = credito;
	}

	@Column(name = "saldo", nullable = false)
	public BigDecimal getSaldo() {
		return this.saldo;
	}

	public void setSaldo(BigDecimal saldo) {
		this.saldo = saldo;
	}

	@Column(name = "tipo", nullable = false)
	public String getTipo() {
		return this.tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataInsercao", nullable = false, length = 23)
	public Date getDataInsercao() {
		return this.dataInsercao;
	}

	public void setDataInsercao(Date dataInsercao) {
		this.dataInsercao = dataInsercao;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transacao")
	public Set<ContaReceber> getContaRecebers() {
		return this.contaRecebers;
	}

	public void setContaRecebers(Set<ContaReceber> contaRecebers) {
		this.contaRecebers = contaRecebers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transacao")
	public Set<ContaPagar> getContaPagars() {
		return this.contaPagars;
	}

	public void setContaPagars(Set<ContaPagar> contaPagars) {
		this.contaPagars = contaPagars;
	}

}
